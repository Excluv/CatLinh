import pandas as pd
import sqlite3
import openpyxl
from datetime import datetime
from copy import copy


def data_to_excel():
    conn = sqlite3.connect('file:CatLinh.sqlite?mode=ro', uri=True)
    cur = conn.cursor()

    # Retrieve list of customers had orders last month:
    from_date = input('From: ')
    to_date = input('To: ')
    cur.execute(f'''
    SELECT Customer.Name
    FROM Orders JOIN Customer
    WHERE Orders.From_Date BETWEEN '{from_date}' AND '{to_date}' 
            AND Orders.Customer_ID = Customer.ID
    ''')

    customer_list = list()
    for row in cur:
        if row[0] not in customer_list:
            customer_list.append(row[0])

    # Retrieve total revenue generated by each of the customer:
    command = '''
    SELECT SUM(Revenue.Revenue), SUM(PickupLocation.Cost), 
            SUM(DropoffLocation.Cost), SUM(Orders.Incurred_Cost), COUNT(Container_ID)
    FROM Orders JOIN Revenue JOIN Customer JOIN PickupLocation JOIN DropoffLocation
    WHERE Customer.Name = ? AND Orders.Customer_ID = Customer.ID AND
            Orders.Customer_ID = Revenue.Customer_ID AND
            Orders.Type_ID = Revenue.Type_ID AND
            Orders.Destination_ID = Revenue.Destination_ID AND
            Orders.PUL_ID = PickupLocation.ID AND
            Orders.DOL_ID = DropoffLocation.ID
    '''
    revenue_list = list()
    for each in customer_list:
        cur.execute(command, (each, ))
        rev = cur.fetchone()
        revenue_list.append((rev[0], rev[1] + rev[2], rev[3], rev[4]))

    # Export data to excel file:
    data = list(0 for x in range(len(customer_list)))
    id = 1
    for x in range(len(customer_list)):
        data[x] = (id, customer_list[x], revenue_list[x][0],
                   revenue_list[x][1], revenue_list[x][2], revenue_list[x][3])
        id += 1

    df = pd.DataFrame(data, columns=
                            ['STT','Khách hàng', 'Cước VC',
                             'Phí chi hộ (Nâng/Hạ)','Phí phát sinh', 'Số lượng'])
    df.to_excel('C:\\Users\\jio\\Desktop\\Test2.xlsx', sheet_name='Doanh thu'
                , index=False, startrow=2)

    # Detailing the excel file:
    file = openpyxl.load_workbook('C:\\Users\\jio\\Desktop\\Test2.xlsx')
    xcel = file.active

    title = f'DOANH THU THÁNG 0{int(datetime.now().month) - 1}/{datetime.now().year}'
    xcel['A1'] = title
    xcel.merge_cells('A1:G2')
    xcel['G3'].value = 'Tổng cộng'
    index = 4
    for ind in range(len(data)):
        sum = 0
        for element in range(2, 5):
            sum += (data[ind][element])
        xcel.cell(row=index + ind, column=7).value = sum

    footer_index = 5 + len(data)
    xcel.cell(row=footer_index, column=1).value = 'Tổng cộng'
    xcel.merge_cells(f'A{footer_index}:B{footer_index}')
    for col in range(3, 8):
        sum = 0
        for row in range(index, footer_index - 1):
            sum += xcel.cell(row=row, column=col).value
        xcel.cell(row=footer_index, column=col).value = sum

    file.save('C:\\Users\\jio\\Desktop\\Test2.xlsx')


def copysheet(source_sheet, target_sheet):
    copysheet_attributes(source_sheet, target_sheet)
    copycells(source_sheet, target_sheet)


def copysheet_attributes(source_sheet, target_sheet):
    target_sheet.sheet_format = copy(source_sheet.sheet_format)
    target_sheet.sheet_properties = copy(source_sheet.sheet_properties)
    target_sheet.merged_cells = copy(source_sheet.merged_cells)
    target_sheet.page_margins = copy(source_sheet.page_margins)
    target_sheet.freeze_panes = copy(source_sheet.freeze_panes)

    # Set row dimensions:
    for rn in range(len(source_sheet.row_dimensions)):
        target_sheet.row_dimensions[rn] = copy(source_sheet.row_dimensions[rn])

    if source_sheet.sheet_format.defaultColWidth is None:
        print('Unable to copy default column width')
    else:
        target_sheet.sheet_format.defaultColWidth = \
            copy(source_sheet.sheet_format.defaultColWidth)

    # Set specific column width and hidden property:
    for key, value in source_sheet.column_dimensions.items():
        target_sheet.column_dimensions[key].min = \
            copy(source_sheet.column_dimensions[key].min)
        target_sheet.column_dimensions[key].max = \
            copy(source_sheet.column_dimensions[key].max)
        target_sheet.column_dimensions[key].width = \
            copy(source_sheet.column_dimensions[key].width)
        target_sheet.column_dimensions[key].hidden = \
            copy(source_sheet.column_dimensions[key].hidden)


def copycells(source_sheet, target_sheet):
    for (row, col), source_cell in source_sheet._cells.items():
        target_cell = target_sheet.cell(row=row, column=col)
        target_cell.value = source_cell.value
        target_cell.data_type = source_cell.data_type

        if source_cell.has_style:
            target_cell.font = copy(source_cell.font)
            target_cell.border = copy(source_cell.border)
            target_cell.fill = copy(source_cell.fill)
            target_cell.number_format = copy(source_cell.number_format)
            target_cell.protection = copy(source_cell.protection)
            target_cell.alignment = copy(source_cell.alignment)

        if source_cell.hyperlink:
            target_cell.hyperlink = copy(source_cell.hyperlink)

        if source_cell.comment:
            target_cell.comment = copy(source_cell.comment)


data_to_excel()
source_file = openpyxl.load_workbook('C:\\Users\\jio\\Desktop\\CatLinhProject\\Samples\\Doanh thu T04.xlsx')
target_file = openpyxl.load_workbook('C:\\Users\\jio\\Desktop\\Test2.xlsx')
target_file.create_sheet('Theo dõi thanh toán')
target_file.create_sheet('Công nợ tồn')

copysheet(source_file['Theo dõi thanh toán'],
          target_file['Theo dõi thanh toán'])
copysheet(source_file['Công nợ tồn'],
          target_file['Công nợ tồn'])

target_file.save('C:\\Users\\jio\\Desktop\\Test2.xlsx')

